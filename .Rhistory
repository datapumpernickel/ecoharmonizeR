pacman::p_load(char = c("comtradr",
"comRex",
"Rat.las",
"tidyverse",
"countrycode"))
comrex_data <- cr_get_data(
freq = "A",
reporter = "DE",
partner = NULL,
product = "27",
indicators = NULL,
time = 2010,
flow = "1",
update = F,
verbose = T,
ds_id = "045409"
)
comtrade_data <-ct_get_data(
reporter = 'DEU',
frequency = "A",
partner = "everything",
commodity_code = "27",
start_date = 2010,
end_date = 2010)
comtrade_bulk <-ct_get_bulk(
reporter = 'DEU',
start_date = 2010,
end_date = 2010)
clean_comrex <-
harmonize(comrex_data, source = "comex") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
#'   harmonized_atlas <- harmonize(atlas_data, "atlas")
#'
#'   # Harmonize data from COMTRADE
#'   harmonized_comtrade <- harmonize(comtrade_data, "comtrade")
#'
#'   # Harmonize bulk data from COMTRADE
#'   harmonized_comtrade_bulk <- harmonize(comtrade_bulk_data, "comtrade_bulk")
#' }
#'
#' @export
harmonize <- function(data, source){
rlang::arg_match(source, values = c("comex", "atlas", "comtrade", "comtrade_bulk"))
if(source == "comex"){
partner <- comRex::cr_get_ref_table("partner")  |>
dplyr::select(partner_desc = description_code,
iso_2 = code) |>
dplyr::mutate(partner_iso = countrycode::countrycode(iso_2,origin = "iso2c", destination = "iso3c")) |>
dplyr::mutate(partner_iso = dplyr::if_else(stringr::str_detect(iso_2,"WORLD"),"world",partner_iso)) |>
dplyr::filter(!iso_2 %in% "XM") |>
dplyr::select(-iso_2)
reporter <- comRex::cr_get_ref_table("reporter")  |>
dplyr::select(reporter_desc = description_code,
iso_2 = code) |>
dplyr::mutate(reporter_iso = countrycode::countrycode(iso_2,origin = "iso2c", destination = "iso3c")) |>
dplyr::mutate(reporter_iso = dplyr::if_else(stringr::str_detect(iso_2,"WORLD"),"world",reporter_iso)) |>
dplyr::select(-iso_2)
flow <- comRex::cr_get_ref_table("flow")  |>
dplyr::select(flow_desc = description_code)
product <- comRex::cr_get_ref_table("product") |>
dplyr::transmute(cmd_desc= description_code,
cmd_code = code)
clean_data <- data |>
janitor::clean_names() |>
dplyr::filter(indicators %in% "VALUE_IN_EUROS") |>
dplyr::transmute(
frequency = frequency,
reporter_desc = reporter,
partner_desc = partner,
cmd_desc = product,
flow_desc = tolower(flow),
time = time_period,
primary_value = value
) |>
dplyr::left_join(partner, by = "partner_desc") |>
dplyr::left_join(reporter, by = "reporter_desc") |>
dplyr::left_join(product, by = "cmd_desc") |>
dplyr::mutate(frequency = dplyr::if_else(stringr::str_detect(frequency,"A|a"), "A","M")) |>
dplyr::filter(!is.na(primary_value)) |>
dplyr::mutate(source = "comex")
} else if(source == "atlas"){
clean_data <- data |>
janitor::clean_names()  |>
dplyr::transmute(
frequency = "A",
reporter_iso  = location_code,
partner_iso = partner_code,
classification_code = "HS0",
cmd_code = hs_product_code,
time = year,
export_value,
import_value
) |>
tidyr::pivot_longer(cols = c(export_value, import_value),
names_to = "flow_desc", values_to = "primary_value",
names_transform = function(x) str_remove(x,"_value"))
partner <- clean_data |> dplyr::distinct(reporter_iso, partner_iso) |>
dplyr::mutate(reporter_desc = countrycode::countrycode(reporter_iso, origin = "iso3c", destination = "country.name.en"))|>
dplyr::mutate(partner_desc = countrycode::countrycode(partner_iso, origin = "iso3c", destination = "country.name.en"))
cmd_desc <- comtradr::ct_get_ref_table("H0")  |>
dplyr::transmute(cmd_code = id, cmd_desc = text)
clean_data <- clean_data |>
dplyr::left_join(partner) |>
dplyr::left_join(cmd_desc)|>
dplyr::mutate(source = "atlas")
} else if(source == "comtrade"){
clean_data <- data |>
dplyr::transmute(
frequency = freq_code,
reporter_desc,
reporter_iso,
partner_desc,
partner_iso,
classification_code,
cmd_desc,
cmd_code,
flow_desc = tolower(flow_desc),
time = period,
primary_value
) |>
dplyr::mutate(frequency = dplyr::if_else(stringr::str_detect(frequency,"A|a"), "A","M")) |>
dplyr::filter(!is.na(primary_value))|>
dplyr::mutate(source = "comtrade")
} else if(source == "comtrade_bulk"){
reporter <- comtradr::ct_get_ref_table("reporter") |>
dplyr::transmute(reporter_code = as.character(id), reporter_iso = iso_3, reporter_desc = country)
partner <- comtradr::ct_get_ref_table("partner") |>
dplyr::transmute(partner_code = as.character(id), partner_iso = iso_3, partner_desc = country)
flow <- comtradr::ct_get_ref_table("flow_direction") |>
dplyr::transmute(flow_code = as.character(id), flow_desc = tolower(text))
clean_data <- comtrade_bulk |>
dplyr::filter(customs_code == "C00" & mot_code == "0" & partner2code =="0")  |>
dplyr::left_join(reporter) |>
dplyr::left_join(partner) |>
dplyr::left_join(flow) |>
dplyr::transmute(
frequency = freq_code,
reporter_desc,
reporter_iso,
partner_desc,
partner_iso,
classification_code,
cmd_code,
flow_desc = tolower(flow_desc),
time = period,
primary_value
) |>
dplyr::mutate(frequency = dplyr::if_else(stringr::str_detect(frequency,"A|a"), "A","M")) |>
dplyr::filter(!is.na(primary_value))|>
dplyr::mutate(source = "comtrade_bulk")
cmd_desc <- purrr::map_dfr(unique(clean_data$classification_code), ~comtradr::ct_get_ref_table(.x) |> dplyr::mutate(classification_code = .x)) |>
dplyr::transmute(cmd_code = id, cmd_desc = text, classification_code)
clean_data <- clean_data |>
dplyr::left_join(cmd_desc)
}
return(clean_data)
}
clean_comrex <-
harmonize(comrex_data, source = "comex") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
clean_comtrade_data <-
harmonize(comtrade_data, source = "comtrade") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
clean_comtrade_bulk <-
harmonize(comtrade_bulk, source = "comtrade_bulk") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
View(clean_comrex)
data <- read_dataverse_atlas(digits = digits, years = 2012) |>
mutate(classification_code = str_c("HS",digits))
digits <- 2
download_dataverse_atlas(digits = digits, years = 2010)
data <- read_dataverse_atlas(digits = digits, years = 2012) |>
mutate(classification_code = str_c("HS",digits))
check()
use_package(c( 'countrycode' 'dplyr' 'janitor' 'purrr' 'rlang' 'stringr' 'tidyr'))
use_package('countrycode')
use_package( 'dplyr' )
use_package( 'tidyr' )
use_package( 'janitor' )
use_package( 'purrr' )
use_package( 'rlang' )
use_package( 'stringr' )
use_mit_license()
use_readme_rmd()
devtools::install_github("datapumpernickel/ecoharmonizeR")
use_git()
build_readme()
digits <- 2
download_dataverse_atlas(digits = digits, years = 2010)
atlas_data <- read_dataverse_atlas(digits = digits, years = 2012) |>
mutate(classification_code = str_c("HS",digits))
digits <- 2
download_dataverse_atlas(digits = digits, years = 2010)
atlas_data <- read_dataverse_atlas(digits = digits, years = 2012) |>
mutate(classification_code = str_c("HS",digits))
comrex_data <- cr_get_data(
freq = "A",
reporter = "DE",
partner = NULL,
product = "27",
indicators = NULL,
time = 2010,
flow = "1",
update = F,
verbose = T,
ds_id = "045409"
)
comtrade_data <-ct_get_data(
reporter = 'DEU',
frequency = "A",
partner = "everything",
commodity_code = "27",
start_date = 2010,
end_date = 2010,
cache = T)
comtrade_bulk <-ct_get_bulk(
reporter = 'DEU',
start_date = 2010,
end_date = 2010,
cache = T)
clean_atlas <-
harmonize(atlas_data, source = "atlas") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
clean_comrex <-
harmonize(comrex_data, source = "comex") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
clean_comtrade_data <-
harmonize(comtrade_data, source = "comtrade") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
clean_comtrade_bulk <-
harmonize(comtrade_bulk, source = "comtrade_bulk") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import")
View(clean_atlas)
clean_atlas <-
harmonize(atlas_data, source = "atlas") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import") |>
mutate(total_world = sum(primary_value))
clean_comrex <-
harmonize(comrex_data, source = "comex") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import") |>
mutate(total_world = sum(primary_value))
clean_comtrade_data <-
harmonize(comtrade_data, source = "comtrade") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import") |>
mutate(total_world = sum(primary_value))
clean_comtrade_bulk <-
harmonize(comtrade_bulk, source = "comtrade_bulk") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import") |>
mutate(total_world = sum(primary_value))
clean_comtrade_bulk <-
harmonize(comtrade_bulk, source = "comtrade_bulk") |>
filter(cmd_code == "27",
reporter_iso == "DEU",
time == 2010,
flow_desc == "import") |>
mutate(total_world = sum(as.numeric(primary_value)))
View(clean_atlas)
26865628711/1000000000
sum(clean_atlas$primary_value)
sum(clean_atlas$primary_value)/2
partner <- ct_get_ref_table("partner") |>
transmute(partner_code = as.character(id), partner_iso = iso_3, partner_desc = country)
View(partner)
View(clean_comtrade_data)
View(clean_comrex)
6521984302+17514150984
library(comtradr)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = 200,
reporter = "TUR",
partner = "DEU",
start_date = "2022",
end_date =  "2022",
flow_direction = "everything",
freq = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = 200,
reporter = "TUR",
partner = "DEU",
start_date = "2022",
end_date =  "2022",
flow_direction = "everything",
frequency = "A"
)
commodity <- ct_get_ref_table("EB")
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "TUR",
partner = "DEU",
start_date = "2022",
end_date =  "2022",
flow_direction = "everything",
frequency = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "TUR",
partner = "DEU",
start_date = "2020",
end_date =  "2020",
flow_direction = "everything",
frequency = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "TUR",
partner = "DEU",
start_date = 2010,
end_date =  "2020",
flow_direction = "everything",
frequency = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "TUR",
partner = "DEU",
start_date = 2010,
end_date =  2020,
flow_direction = "everything",
frequency = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "USA",
partner = "DEU",
start_date = 2010,
end_date =  2020,
flow_direction = "everything",
frequency = "A"
)
deutur_services_exp_imp_2022_raw <-
comtradr::ct_get_data(
type = "services",
commodity_classification = "EB",
commodity_code = "200",
reporter = "USA",
partner = "DEU",
start_date = "2020",
end_date =  "2020",
flow_direction = "everything",
frequency = "A"
)
?ct_get_data
ct_get_bulk(type = "services", reporter = "TUR")
test <- ct_get_bulk(type = "services", reporter = "TUR",commodity_classification = "EB")
test <- ct_get_bulk(type = "services", reporter = "TUR",commodity_classification = "EB", start_date = 2020, end_date = 2020)
?ct_get_bulk
test <-
ct_get_bulk(
type = "services",
reporter = "DEU",
commodity_classification = "EB",
start_date = 2020,
end_date = 2020
)
rlang::last_trace()
